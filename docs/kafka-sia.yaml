openapi: 3.0.0

info:
  title: API Kafka - Administrador SIA
  version: 1.0.0
  license:
    name: kafka.secretia.es
    url: https://kafka.secretia.es/api
  description: |
    API para la publicación de mensajes en los distintos topics de kafka.
    Esta documentación está dedicada a definir el flujo de información entre
    las distintas organizaciones que usan el Kafka para la sincronización de
    datos.

    **Usuario: SIA (Administrador)** - Acceso completo a todos los topics.

servers:
  - url: https://kafka.secretia.es/api/

tags:
  - name: Autenticación
  - name: Kafka Topics - CAF
  - name: Kafka Topics - GESFINCAS
  - name: Kafka Topics - SIA

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Message:
      type: object
      properties:
        key:
          type: string
          description: Clave del mensaje
        value:
          type: object
          description: Contenido del mensaje
        timestamp:
          type: string
          format: date-time
          description: Timestamp del mensaje
        partition:
          type: integer
          description: Partición del topic
        offset:
          type: integer
          description: Offset del mensaje

    ProduceRequest:
      type: object
      required:
        - value
      properties:
        key:
          type: string
          description: Clave del mensaje (opcional)
        value:
          type: object
          description: Contenido del mensaje

  responses:
    UnauthorizedError:
      description: Token inválido o ausente
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
                example: "Unauthorized"

paths:
  /auth/login:
    post:
      tags:
        - Autenticación
      summary: Inicia sesión y obtiene un token JWT
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: sia
                password:
                  type: string
                  example: secret123
      responses:
        '200':
          description: Token JWT generado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /topics:
    get:
      tags:
        - Kafka Topics - SIA
      summary: Lista de todos los topics disponibles
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Lista de topics disponibles
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
                example: ["caf", "caf-sia", "sia-caf", "gesfincas", "gesfincas-sia", "sia-gesfincas"]
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  # Topics CAF
  /topics/caf/messages:
    post:
      deprecated: true
      tags:
        - Kafka Topics - CAF
      summary: Publicar mensaje en topic CAF
      description: Topic principal de CAF para mensajes generales
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProduceRequest'
      responses:
        '200':
          description: Mensaje publicado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  partition:
                    type: integer
                    example: 0
                  offset:
                    type: integer
                    example: 42
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    get:
      deprecated: true
      tags:
        - Kafka Topics - CAF
      summary: Consumir mensajes del topic CAF
      description: Obtiene los mensajes más recientes del topic CAF
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Número de mensajes a obtener
        - in: query
          name: offset
          schema:
            type: integer
          description: Offset desde donde empezar a leer
      responses:
        '200':
          description: Lista de mensajes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /topics/caf-sia/messages:
    post:
      tags:
        - Kafka Topics - CAF
      summary: Publicar mensaje de CAF hacia SIA
      description: Topic para comunicación de CAF hacia SIA
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProduceRequest'
      responses:
        '200':
          description: Mensaje publicado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  partition:
                    type: integer
                    example: 0
                  offset:
                    type: integer
                    example: 43
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    get:
      tags:
        - Kafka Topics - CAF
      summary: Consumir mensajes del topic CAF-SIA
      description: Obtiene los mensajes enviados de CAF hacia SIA
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Número de mensajes a obtener
        - in: query
          name: offset
          schema:
            type: integer
          description: Offset desde donde empezar a leer
      responses:
        '200':
          description: Lista de mensajes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /topics/sia-caf/messages:
    post:
      tags:
        - Kafka Topics - CAF
      summary: Publicar mensaje de SIA hacia CAF
      description: Topic para comunicación de SIA hacia CAF
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProduceRequest'
      responses:
        '200':
          description: Mensaje publicado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  partition:
                    type: integer
                    example: 0
                  offset:
                    type: integer
                    example: 44
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    get:
      tags:
        - Kafka Topics - CAF
      summary: Consumir mensajes del topic SIA-CAF
      description: Obtiene los mensajes enviados de SIA hacia CAF
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Número de mensajes a obtener
        - in: query
          name: offset
          schema:
            type: integer
          description: Offset desde donde empezar a leer
      responses:
        '200':
          description: Lista de mensajes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  # Topics GESFINCAS
  /topics/gesfincas/messages:
    post:
      deprecated: true
      tags:
        - Kafka Topics - GESFINCAS
      summary: Publicar mensaje en topic GESFINCAS
      description: Topic principal de GESFINCAS para mensajes generales
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProduceRequest'
      responses:
        '200':
          description: Mensaje publicado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  partition:
                    type: integer
                    example: 0
                  offset:
                    type: integer
                    example: 45
        '401':
          $ref: '#/components/responses/UnauthorizedError'
    get:
      deprecated: true
      tags:
        - Kafka Topics - GESFINCAS
      summary: Consumir mensajes del topic GESFINCAS
      description: Obtiene los mensajes más recientes del topic GESFINCAS
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Número de mensajes a obtener
        - in: query
          name: offset
          schema:
            type: integer
          description: Offset desde donde empezar a leer
      responses:
        '200':
          description: Lista de mensajes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /topics/gesfincas-sia/messages:
    post:
      tags:
        - Kafka Topics - GESFINCAS
      summary: Publicar mensaje de GESFINCAS hacia SIA
      description: Topic para comunicación de GESFINCAS hacia SIA
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProduceRequest'
      responses:
        '200':
          description: Mensaje publicado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  partition:
                    type: integer
                    example: 0
                  offset:
                    type: integer
                    example: 46
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    get:
      tags:
        - Kafka Topics - GESFINCAS
      summary: Consumir mensajes del topic GESFINCAS-SIA
      description: Obtiene los mensajes enviados de GESFINCAS hacia SIA
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Número de mensajes a obtener
        - in: query
          name: offset
          schema:
            type: integer
          description: Offset desde donde empezar a leer
      responses:
        '200':
          description: Lista de mensajes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /topics/sia-gesfincas/messages:
    post:
      tags:
        - Kafka Topics - GESFINCAS
      summary: Publicar mensaje de SIA hacia GESFINCAS
      description: Topic para comunicación de SIA hacia GESFINCAS
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProduceRequest'
      responses:
        '200':
          description: Mensaje publicado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    example: true
                  partition:
                    type: integer
                    example: 0
                  offset:
                    type: integer
                    example: 47
        '401':
          $ref: '#/components/responses/UnauthorizedError'

    get:
      tags:
        - Kafka Topics - GESFINCAS
      summary: Consumir mensajes del topic SIA-GESFINCAS
      description: Obtiene los mensajes enviados de SIA hacia GESFINCAS
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: limit
          schema:
            type: integer
            default: 10
          description: Número de mensajes a obtener
        - in: query
          name: offset
          schema:
            type: integer
          description: Offset desde donde empezar a leer
      responses:
        '200':
          description: Lista de mensajes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Message'
        '401':
          $ref: '#/components/responses/UnauthorizedError'

  /health:
    get:
      tags:
        - Autenticación
      summary: Endpoint de salud sin autenticación
      responses:
        '200':
          description: El servicio está operativo
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: "healthy"
                  timestamp:
                    type: string
                    format: date-time